# Form implementation generated from reading ui file 'StockMarket.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(793, 630)
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayoutWidget = QtWidgets.QWidget(parent=self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(90, 0, 581, 171))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.CaptionLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.CaptionLayout.setContentsMargins(0, 0, 0, 0)
        self.CaptionLayout.setObjectName("CaptionLayout")
        self.textBrowser = QtWidgets.QTextBrowser(parent=self.verticalLayoutWidget)
        self.textBrowser.setObjectName("textBrowser")
        self.CaptionLayout.addWidget(self.textBrowser)
        self.textBrowser_2 = QtWidgets.QTextBrowser(parent=self.verticalLayoutWidget)
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.CaptionLayout.addWidget(self.textBrowser_2)
        self.tabWidget = QtWidgets.QTabWidget(parent=self.centralwidget)
        self.tabWidget.setEnabled(True)
        self.tabWidget.setGeometry(QtCore.QRect(90, 190, 581, 361))
        self.tabWidget.setObjectName("tabWidget")
        self.TestSymbol = QtWidgets.QWidget()
        self.TestSymbol.setObjectName("TestSymbol")
        self.testSymbolInstructions = QtWidgets.QTextBrowser(parent=self.TestSymbol)
        self.testSymbolInstructions.setGeometry(QtCore.QRect(10, 10, 551, 91))
        self.testSymbolInstructions.setObjectName("testSymbolInstructions")
        self.testSymbolPushButton = QtWidgets.QPushButton(parent=self.TestSymbol)
        self.testSymbolPushButton.setGeometry(QtCore.QRect(480, 113, 81, 71))
        self.testSymbolPushButton.setObjectName("testSymbolPushButton")
        self.resultOutputTestSymbol = QtWidgets.QTextBrowser(parent=self.TestSymbol)
        self.resultOutputTestSymbol.setGeometry(QtCore.QRect(10, 220, 551, 111))
        self.resultOutputTestSymbol.setObjectName("resultOutputTestSymbol")
        self.resultTestSymbollabel = QtWidgets.QLabel(parent=self.TestSymbol)
        self.resultTestSymbollabel.setGeometry(QtCore.QRect(260, 200, 71, 16))
        self.resultTestSymbollabel.setObjectName("resultTestSymbollabel")
        self.verticalLayoutWidget_2 = QtWidgets.QWidget(parent=self.TestSymbol)
        self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(210, 110, 251, 80))
        self.verticalLayoutWidget_2.setObjectName("verticalLayoutWidget_2")
        self.verticalLayoutInputDataUpdate = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)
        self.verticalLayoutInputDataUpdate.setContentsMargins(0, 0, 0, 0)
        self.verticalLayoutInputDataUpdate.setObjectName("verticalLayoutInputDataUpdate")
        self.testSymoblTypeInput = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.testSymoblTypeInput.setText("")
        self.testSymoblTypeInput.setObjectName("testSymoblTypeInput")
        self.verticalLayoutInputDataUpdate.addWidget(self.testSymoblTypeInput)
        self.testSymbolSymbolInput = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.testSymbolSymbolInput.setText("")
        self.testSymbolSymbolInput.setObjectName("testSymbolSymbolInput")
        self.verticalLayoutInputDataUpdate.addWidget(self.testSymbolSymbolInput)
        self.testSymbolTableNameInput = QtWidgets.QLineEdit(parent=self.verticalLayoutWidget_2)
        self.testSymbolTableNameInput.setText("")
        self.testSymbolTableNameInput.setObjectName("testSymbolTableNameInput")
        self.verticalLayoutInputDataUpdate.addWidget(self.testSymbolTableNameInput)
        self.verticalLayoutWidget_3 = QtWidgets.QWidget(parent=self.TestSymbol)
        self.verticalLayoutWidget_3.setGeometry(QtCore.QRect(20, 110, 181, 81))
        self.verticalLayoutWidget_3.setObjectName("verticalLayoutWidget_3")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_3)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label = QtWidgets.QLabel(parent=self.verticalLayoutWidget_3)
        self.label.setObjectName("label")
        self.verticalLayout_2.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(parent=self.verticalLayoutWidget_3)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.label_3 = QtWidgets.QLabel(parent=self.verticalLayoutWidget_3)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.tabWidget.addTab(self.TestSymbol, "")
        self.UpdateData = QtWidgets.QWidget()
        self.UpdateData.setObjectName("UpdateData")
        self.updateInstructions = QtWidgets.QTextBrowser(parent=self.UpdateData)
        self.updateInstructions.setGeometry(QtCore.QRect(10, 10, 551, 61))
        self.updateInstructions.setObjectName("updateInstructions")
        self.resultUpdate = QtWidgets.QTextBrowser(parent=self.UpdateData)
        self.resultUpdate.setGeometry(QtCore.QRect(10, 120, 551, 131))
        self.resultUpdate.setObjectName("resultUpdate")
        self.updateDBpushButton = QtWidgets.QPushButton(parent=self.UpdateData)
        self.updateDBpushButton.setGeometry(QtCore.QRect(10, 80, 551, 24))
        self.updateDBpushButton.setObjectName("updateDBpushButton")
        self.tabWidget.addTab(self.UpdateData, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.textBrowser.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-size:18pt; font-weight:700;\">StockLib</span></p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">Welcome to StockLib wizard!</p>\n"
"<p align=\"center\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'JetBrains Mono\',\'monospace\'; color:#000000;\">You have following possibilities:</span></p></body></html>"))
        self.textBrowser_2.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'JetBrains Mono\',\'monospace\'; color:#000000;\">1) Test symbol</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'JetBrains Mono\',\'monospace\'; color:#000000;\">2) Update all database with new data</span></p></body></html>"))
        self.testSymbolInstructions.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You selected to test symbol. If symbol is valid, it will be added in json. When you run update all database (number 2) the symbol will be used from json. You need to insert symbol, in what type do you want to save it (stocks/etf/benchmark), and what will be table name. Benchmark involve only one symbol. Be aware, if table already exist with inserted name, than you need to change it to be uniq. Choose names wisely! </p></body></html>"))
        self.testSymbolPushButton.setText(_translate("MainWindow", "Test symbol"))
        self.resultTestSymbollabel.setText(_translate("MainWindow", "Result:"))
        self.label.setText(_translate("MainWindow", "Type (stocks/etf/benchmark)"))
        self.label_2.setText(_translate("MainWindow", "Tested symbol (ticke, e.i. AAPL)"))
        self.label_3.setText(_translate("MainWindow", "Table name"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.TestSymbol), _translate("MainWindow", "Test Symbol"))
        self.updateInstructions.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><meta charset=\"utf-8\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"hr { height: 1px; border-width: 0; }\n"
"li.unchecked::marker { content: \"\\2610\"; }\n"
"li.checked::marker { content: \"\\2612\"; }\n"
"</style></head><body style=\" font-family:\'Segoe UI\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">You selected to update database, just sit down and relax, we will notify you when process will be finished. Just make sure that you have already tested some symbols (and so filled the json,  which will provide data for update). You need at least one symbol for stocks or etf and benchmark symbol. </p></body></html>"))
        self.updateDBpushButton.setText(_translate("MainWindow", "Make update"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.UpdateData), _translate("MainWindow", "Update datebase"))
